import is from "../isType.mjs";

let i = 1,
	a = function (a,b){ console.assert(a === b, (i++)+". "+a+" !== "+b); };

a(is(), "undefined");
a(is(null), "null");
a(is({}), "Object");
a(is([]), "Array");
a(is(arguments), "Arguments");
if(window.BigInt) a(is(BigInt(5)), "bigint");
else i++;
a(is(false), "boolean");
a(is(new Boolean()), "Boolean");
a(is(new Date()), "Date");
a(is(function(){}), "function");
a(is(new Function()), "function");
a(is(/a/), "RegExp");
a(is(new RegExp("a")), "RegExp");
a(is(""), "string");
a(is(new String("")), "String");
if(window.Symbol) a(is(Symbol()), "symbol");
else i++;
a(is(5), "number");
a(is(new Number(5)), "Number");
a(is(NaN), "NaN");
a(is(new Number(NaN)), "NaN");
a(is(1/0), "number");
a(is(new Number(1/0)), "Number");

a(is.defined(), false);
a(is.defined(5), true);
a(is.undefined(), true);
a(is.undefined(5), false);
a(is.null(null), true);
a(is.null(5), false);
a(is.array([]), true);
a(is.array(5), false);
a(is.array(arguments), false);
if(window.BigInt) a(is.bigint(BigInt(5)), true);
else i++;
a(is.bigint(5), false);
a(is.boolean(false), true);
a(is.boolean(), false);
a(is.boolean(5), false);
a(is.date(new Date()), true);
a(is.date(5), false);
a(is.date(1*(new Date())), false);
a(is.function(function(){}), true);
a(is.function(new Function()), true);
a(is.function(5), false);
a(is.regexp(/a/), true);
a(is.regexp(new RegExp("a")), true);
a(is.regexp(5), false);
a(is.string(""), true);
a(is.string(new String()), true);
a(is.string(5), false);
if(window.Symbol) a(is.symbol(Symbol()), true);
else i++;
a(is.symbol(5), false);
a(is.nan(NaN), true);
a(is.nan(new Number(NaN)), true);
a(is.nan(5), false);
a(is.nan(new Number(5)), false);
a(is.number(5), true);
a(is.number(new Number()), true);
a(is.number(NaN), false);
a(is.number(new Number(NaN)), false);
a(is.number(1/0), true);
a(is.number(new Number(1/0)), true);
a(is.number(""), false);
a(is.number(new Date()), false);
a(is.number(1*(new Date())), true);
a(is.number.real(5), true);
a(is.number.real(1/0), false);
a(is.number.real(NaN), false);
a(is.number.real("5"), false);
a(is.number.infinite(1/0), true);
a(is.number.infinite(5), false);
a(is.number.infinite(NaN), false);
a(is.number.infinite("Infinity"), false);

a(is.object({}), true);
a(is.object(5), false);
a(is.object(new Number()), true);
a(is.object(function(){}), true);
a(is.primitive(), true);
a(is.primitive(5), true);
a(is.primitive(new Number()), false);
a(is.primitive(NaN), true);
a(is.primitive(new Number(NaN)), false);
